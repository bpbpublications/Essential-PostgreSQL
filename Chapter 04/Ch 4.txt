Chapter:4 

# select * from information_schema.columns
where table_name='Employee';

# dt
# select * from information_schema.tables
where table_schema='public';

# CREATE TABLE products_base (
    product_id SERIAL PRIMARY KEY,
    name VARCHAR(255),
    description TEXT,
    price NUMERIC(10, 2)
);
#CREATE TABLE electronics_child () INHERITS (products_base);
#CREATE TABLE clothing_child () INHERITS (products_base);
#CREATE TABLE books_child () INHERITS (products_base);

#select table_name,column_name, data-type
from
 information_schema.columns
where
 table_name='clothing_child';

#ALTER TABLE electronics ADD COLUMN brand VARCHAR(50);
#ALTER TABLE clothing ADD COLUMN available_size VARCHAR(10);
#ALTER TABLE books ADD COLUMN author_name VARCHAR(100);

#insert into electronics_child(name,description,price,brand) values('Speaker'  ,'Bluetooth speaker',454545.34,'Samsung')
#insert into books_child(name,description,price,author_name) values('Java-A complete practical solution','Complete hands on book',657.3,'Swati saxena');
#insert into clothing_child(name,description,price,available_size) values('T-Shirt','Full sleeves',1657.3,'L');

#select   * from products_base;

#insert into products_base(name,description,price) values('Chair','Wooden',1657.3);
#select   * from books_child
#SELECT name, price FROM ONLY products_base;
#ALTER TABLE electronics_child NO INHERIT products_base;

#CREATE TABLE customers (id INTEGER, location TEXT, phone NUMERIC) PARTITION BY LIST(location);
#CREATE TABLE cust_US PARTITION OF customers FOR VALUES IN ('US');
#CREATE TABLE cust_IND PARTITION OF customers FOR VALUES IN ('INDIA');
#CREATE TABLE cust_others PARTITION OF customers DEFAULT;
#CREATE TABLE test (id INTEGER, name TEXT) PARTITION BY RANGE(id);
#CREATE TABLE test1 PARTITION OF test FOR VALUES FROM(0) TO (10);
#CREATE TABLE test2 PARTITION OF test FOR VALUES FROM(11) TO (20);

#CREATE TABLE customers (id INTEGER, location TEXT) PARTITION BY HASH(id);
#CREATE TABLE customer_part1 PARTITION OF customers FOR VALUES WITH (modulus 3, remainder 0);
#CREATE TABLE customer_part2 PARTITION OF customers FOR VALUES WITH (modulus 3, remainder 1);

#CREATE UNLOGGED TABLE unlogged_table (
    id serial PRIMARY KEY,
    name VARCHAR(255)
);
#create table fruit(
fruit_id serial,
fruit_name varchar(20));

#insert into fruit(fruit_name) values('Apple'),('Kiwi'),('orange'0,('Cherry')

#select * from fruit;

#insert into voting_eligibility values(101,12,'f'),(102,'35',true), (301,43, 't'),  
    (401,66, '1'),  
    (501, 73,'y'),  
    (601, 31,'yes'),  
    (701, 17,'no'),  
    (801, 15,'0');  

#Select * from voting_eligibility;

#CREATE TABLE text_test (
    id serial PRIMARY KEY,
    x TEXT,
    y TEXT
);

#  INSERT INTO text_test (x, y)
VALUES
    (
        'Postgres',
        'We are learning databse'

    ),
    (
    'Essential Postgres',
    'A guide for developers'
    ); 

# select * from text_test;

#CREATE TABLE product (
	product_id serial PRIMARY KEY,
	product_name VARCHAR (255),
	manufacture_date DATE NOT NULL default current_date,
	expiry_date DATE NOT NULL
);

#CREATE TABLE shift_schedule (
    id serial PRIMARY KEY,
    shift_name VARCHAR NOT NULL,
    clock_in_time TIME NOT NULL,
    clock_out_time TIME NOT NULL
);

#SELECT  
EXTRACT (MINUTE  
FROM  
INTERVAL '2 hours 30 minutes'  
    ) as Minute,EXTRACT (hour  
FROM  
INTERVAL '2 hours 30 minutes'  
    ) as Hour;

#CREATE TABLE timestamp_demo (
    ts TIMESTAMP, 
    tstz TIMESTAMPTZ
);
#SET timezone = 'INDIA/05:30:00';

#CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
#SELECT uuid_generate_v1();

#CREATE TABLE Items (
    item_id SERIAL PRIMARY KEY,
    item_name char(5) NOT NULL,
    country text[]

);

#CREATE EXTENSION hstore  ;

#create table books(
id serial primary key,
title varchar(255),
attribute hstore
);

#insert into books (title, attribute)
values
(
' java complete practical solution',
'"paperback"=>"763",
"publisher"=>"CS publisher",
"language"=>"English"
"ISBN-13"=>978-1449370000",
"weight" => "11.2 ounces" '
);

#select * from books;

#SELECT $$I slit the sheet , the sheet I slit, and on the slitted sheet I sit$$::tsvector;  

#SELECT to_tsvector (‘The quick brown fox jumped over the lazy dog.’);

#SELECT to_tsvector('a big black bear sat on a big black rug');

#Select walking & fast ::tsquery;  
#SELECT  to_tsquery('cat & rat ');

#SELECT 
  to_tsvector(
    'The quick brown fox jumps over the lazy dog.'
  ) @@ to_tsquery('cat') result;



