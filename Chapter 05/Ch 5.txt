Chapter:5  
#create table orders(
order_id serial,
quantity numeric check ( quantity>0));
check ( quantity>0)

#create table orders(
order_id serial,
quantity numeric constraint no_zero_quantity check(quantity>0));

#insert into orders (quantity) values (-2)
#create table products(
product_no integer
name text,
price numeric check(price>0),
discounted_price numeric check (discounted_price >0)
);

#create table products(
product_no integer
name text,
price numeric check(price>0),
discounted_price numeric check (discounted_price >0),
check(price > discounted_price)
);

#CREATE TABLE Employees (
    Eid integer,
    Ename text,
    salary numeric CHECK (salary > 0),
	birth_date date,
	date_of_joining date not null,
	constraint valid_joining check  (birth_date > date_of_joining)
  );

#CREATE TABLE Employees (
    Eid integer,
    Ename text,
    salary numeric CHECK (salary > 0),
	birth_date date,
	date_of_joining date not null,
	email varchar(20) unique,
	constraint valid_joining check  (birth_date > date_of_joining)
  );

#CREATE TABLE Employees (
    Eid integer,
    Ename text,
    salary numeric CHECK (salary > 0),
	birth_date date,
	date_of_joining date not null,
	email varchar(20),
	constraint valid_joining check  (birth_date > date_of_joining),
	unique (email)
  );

#CREATE TABLE Employees (
    Eid integer,
    Ename text,
    salary numeric CHECK (salary > 0),
	birth_date date,
	date_of_joining date not null,
	email varchar(20),
	phone_number bigint,
	constraint valid_joining check  (birth_date > date_of_joining),
	constraint email_phone unique (email,phone_number)
  );

#CREATE TABLE Employees (
    Eid integer not null,
    Ename text,
    salary numeric CHECK (salary > 0),
	birth_date date not null,
	date_of_joining date check (date_of_joining is not null),
	email varchar(20),
	phone_number bigint,
	constraint valid_joining check  (birth_date > date_of_joining),
	constraint email_phone unique (email,phone_number)
  );

#CREATE TABLE Employees (
    Eid integer primary key,
    Ename text,
    salary numeric CHECK (salary > 0),
	email varchar(20),
	phone_number bigint,
	constraint email_phone unique (email,phone_number)
  );

#create table products(
product_id int,
category_id varchar,
unit_price numeric,
constraint PK_Products primary key(product_id,category_id));

#create table dept
(
deptNo int primary key,
dname varchar(20)
);
#create table EMP
(
eid int primary key,
eame varchar(20),
salary real not null,
deptNo int references dept(deptNo)
);

#insert into dept values(10,'software'),(20,'hardware');
#insert into emp values(101,'Arina',454555,10),(102,'Thomas',56565656,20);
#insert into emp values(103,'Alice',454555,30);
#create table EMP
(
eid int primary key,
eame varchar(20),
salary real not null,
deptNo int ,
constraint FK_dept_emp foreign key (deptno) references dept(deptNo)
);

#create table t1
(
eid int references emp(eid),
deptid int references dept(deptno),
primary key(eid,deptid)
)

#CREATE EXTENSION btree_gist;

#create table company7(
ID int primary key not null,
NAME TEXT,
AGE INT ,
EXCLUDE USING gist
	( NAME WITH =,
	 AGE WITH <>)
);

#INSERT INTO COMPANY7 VALUES(1,'john',32);
#INSERT INTO COMPANY7 VALUES(2,'john',32);
#INSERT INTO COMPANY7 VALUES(3,'paul',42);
#INSERT INTO COMPANY7 VALUES(4,'Ann',42);

#create table EMP
(
Emp_Id INT PRIMARY KEY  NOT NULL,  
Emp_Name  TEXT,  
Emp_Address CHAR(50),  
Emp_Age INT,  
Emp_SALARY REAL,  
EXCLUDE USING gist (Emp_Name WITH =,Emp_Age WITH <>)   
)

#CREATE TABLE fruit (
    fruit_id INT GENERATED ALWAYS AS IDENTITY
	(START WITH 10 INCREMENT BY 10),
    fruit_name VARCHAR NOT NULL
);

#CREATE TABLE fruit (
    fruit_id INT GENERATED By Default AS IDENTITY,
    fruit_name VARCHAR NOT NULL
);	
#insert into fruit(fruit_name) values('Banana');
#insert into fruit values(5,'Apple');

#alter table products drop constraint pk_products;


